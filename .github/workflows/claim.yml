name: "Oracle Auto VPS Claim"

on:
  schedule:
    - cron: "*/10 * * * *"  # 每10分钟运行一次
  workflow_dispatch:  # 支持手动触发

jobs:
  claim:
    runs-on: ubuntu-latest
    timeout-minutes: 5  # 设置超时时间
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4  # 更新到最新版本

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install oci requests

      - name: Configure OCI credentials
        run: |
          mkdir -p ~/.oci
          cat << EOF > ~/.oci/config
          [DEFAULT]
          user=${{ secrets.OCI_USER_OCID }}
          fingerprint=${{ secrets.OCI_FINGERPRINT }}
          key_file=~/.oci/oci_api_key.pem
          tenancy=${{ secrets.OCI_TENANCY_OCID }}
          region=${{ secrets.OCI_REGION }}
          EOF
          
          echo "${{ secrets.OCI_API_KEY }}" > ~/.oci/oci_api_key.pem
          chmod 600 ~/.oci/oci_api_key.pem

      - name: Execute claim script
        run: |
          echo "Starting Oracle VPS claim process..."
          cat > claim.py << 'EOF'
          import oci
          print("模拟抢机成功！")  # 替换为实际OCI API调用代码
          EOF
          
          python claim.py > claim.log 2>&1

      - name: Send Telegram notification
        if: always()
        run: |
          MESSAGE="Oracle VPS Auto Claim 任务已完成（状态: ${{ job.status }}）"
          curl -s -X POST \
            "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" \
            -d chat_id="${{ secrets.TELEGRAM_CHAT_ID }}" \
            -d text="$MESSAGE"

      - name: Upload logs as artifact
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: oracle-vps-claim-logs
          path: claim.log
